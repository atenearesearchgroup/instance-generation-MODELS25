model MyExpenses

dataType Date
operations
    Date(date : String)
end

enum PaymentMethod {
    CREDIT_CARD,
    CHECK,
    CASH
}

enum BillStatus {
    DRAFT,
    PENDING,
    VERIFIED,
    VALIDATED,
    REFUSED,
    REFUNDED
}

class Expense
attributes
    amount : Real
    startDate : Date
    endDate : Date
end

class Bill
attributes
    amount : Real
    category : String
    date : Date
    paymentMethod : PaymentMethod
    status : BillStatus
end

class Comment
attributes
    text : String
end

class Currency
attributes
    name : String
    abbreviation : String
end


composition ExpenseContainsBills between
    Expense [1]
    Bill [*] role bills
end

association ExpenseComment between
    Expense [1]
    Comment [*] role comments
end

association BillCurrency between
    Bill [1..*]
    Currency [1] role currency
end

constraints
context Expense inv positiveAmount:
    self.amount >= 0

context Expense inv expenseSumOfBills:
    self.amount = self.bills->collect(b : Bill | b.amount)->sum()